#!/bin/bash

source ../Scripts/fn_verify.sh

base_dir="${HOME}"

# test_dir="${HOME}/Working/PhiDra/tests/DUMMY"
cd `dirname $0`
test_dir=`pwd`
echo "$test_dir"

# input_data_dir="${test_dir}/../input_data"
input_data_dir="${HOME}/Data/la_cascade"

output_data_dir="${test_dir}/data"
mkdir -p ${output_data_dir}

miniapp_hdf5_src_dir=`cd ../../src ; pwd`
miniapp_hdf5_bin_dir=`cd ../bin ; pwd`

S=1
LEVELS=(0 1 2 3)
input_file=mini_input.dat

config="${test_dir}/input.config"
touch $config
echo "input_file = $input_file" >> $config
echo "input_file_directory = ${input_data_dir}" >> $config
echo "omp_num_threads = 4" >> $config
echo "omp_thread_group_size = 2" >> $config
echo "cpu_ncores = 2" >> $config
echo "cpu_nthreads_per_core = 2" >> $config
echo "output_variables = Y" >> $config

function verify_batch {
	OPTS=$1

	echo "Evaluating ${OPTS}"

	tolerance=""
	if [[ "${OPTS}" != *"COLOUR"* ]]; then
		# echo "FLOPS have not been reordered, requiring exact match"
		tolerance=0.0
	fi

	for ((l=0 ; l < 4; l++)); do
		verify_level density ${OPTS} 1 $l $tolerance
		verify_level density_energy ${OPTS} 1 $l $tolerance
		verify_level momentum ${OPTS} 1 $l $tolerance
	done
	# echo "${OPTS} correct on all levels"
}

function execute {
	OPTS=$1

	${base_dir}/Working/PhiDra/bin/cpu-master${OPTS}.b -c $config
	for L in "${LEVELS[@]}"; do
		for DS in "${DATASETS_TO_COMPARE[@]}"; do
			if [ ! -f ${DS}.L$L ]; then
				echo "Test has not generated ${DS}.L$L"
				exit 1
			fi
			mv ${DS}.L$L ${output_data_dir}/${DS}.${OPTS}.L$L
		done
	done
}

# Compile:

cd ${miniapp_hdf5_src_dir}
export BUILD_FLAGS="-DTESTS"
make
OPTS_master=$(echo "${BUILD_FLAGS}" | sed 's/ //g')

OPTS_TO_TEST=("-DA -DB" \
			  "-DC -DD")
for O in "${OPTS_TO_TEST[@]}"; do
	cd ${HOME}/Working/PhiDra/src
	export BUILD_FLAGS="$O"
	make

	# Verify that binaries are different:
	O2=$(echo "${O}" | sed 's/ //g')
	cd ${HOME}/Working/PhiDra/bin
	match=$(cmp cpu-master${OPTS_master}.b cpu-master${O2}.b && echo 'Y' || echo 'N')
	if [ "$match" = "Y" ]; then
		echo "Compiling with args $O did not produce a different binary."
		exit 1
	fi
done

# Run:
rm -f ${output_data_dir}/*

cd ${output_data_dir}

${miniapp_hdf5_bin_dir}/euler3d_cpu_double--DTESTS-icpc.b -c $config
if [ ! -f density.L0 ]; then
	echo "No output generated by miniapp-master"
	exit 1
fi
for L in "${LEVELS[@]}"; do
	# mv areas.L$L ${output_data_dir}/areas.master.L$L
	# mv step_factors.L$L ${output_data_dir}/step_factors.master.L$L
	# mv edge_density.L$L ${output_data_dir}/edge_density.master.L$L
	# mv fluxes.L$L ${output_data_dir}/fluxes.master.L$L
	mv density.L$L ${output_data_dir}/density.master.L$L
	mv density_energy.L$L ${output_data_dir}/density_energy.master.L$L
	mv momentum.L$L ${output_data_dir}/momentum.master.L$L
done

cd ${output_data_dir}
for O in "${OPTS_TO_TEST[@]}"; do
	cd ${HOME}/Data/la_cascade
	execute $(echo "${O}" | sed 's/ //g')

	cd ${output_data_dir}
	verify_batch $(echo "${O}" | sed 's/ //g')
done
