//
// auto-generated by op2.py
//

#include <cmath>
#include "const.h"
#include "structures.h"
#include "global.h"

void initialize_variables_kernel_omp4_kernel(
  double *data0,
  int dat0size,
  int count,
  int num_teams,
  int nthread){

  #pragma omp target teams num_teams(num_teams) thread_limit(nthread) map(to:data0[0:dat0size]) \
    map(to: ff_variable_ompkernel[:5])
  #pragma omp distribute parallel for schedule(static,1)
  for ( int n_op=0; n_op<count; n_op++ ){
    //variable mapping
    double* variables = &data0[5*n_op];

    //inline function
    
      for(int j = 0; j < NVAR; j++) {
          variables[j] = ff_variable_ompkernel[j];
      }
    //end inline func
  }

}
